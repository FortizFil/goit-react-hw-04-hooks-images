{"version":3,"sources":["components/Searchbar/searchbar.jsx","components/ImageGalleryItem/imageGalleryItem.jsx","components/ImageGallery/imageGallery.jsx","components/Button/button.jsx","photoApi.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","App.js","index.js"],"names":["SearchBar","onSubmit","useState","photo","setPhoto","className","event","preventDefault","trim","type","placeholder","value","onChange","currentTarget","toLowerCase","ImageGalleryItem","name","photoUrl","largeImageURL","onClick","src","alt","ImageGallery","photos","onSelect","map","id","webformatURL","Button","onClickLoadMore","window","scrollTo","top","document","documentElement","scrollHeight","behavior","api","fetchPhoto","page","fetch","then","response","json","Loader","color","height","width","Modal","onClose","handleEscKey","useCallback","e","code","useEffect","addEventListener","removeEventListener","target","App","setName","setPhotos","setPage","status","setStatus","showButton","setShowButton","modalContent","setModalContent","photoAPI","imgs","hits","length","prevPhotos","largeImageUrl","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0ad2abb2.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SearchBar = ({ onSubmit }) => {\r\n  const [photo, setPhoto] = useState('');\r\n\r\n  const handleNameChange = event => {\r\n    setPhoto(event.currentTarget.value.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (photo.trim() === '') {\r\n      return;\r\n    }\r\n\r\n    onSubmit(photo);\r\n    setPhoto('');\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form onSubmit={handleSubmit} className=\"SearchForm\">\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          placeholder=\"Search images and photos\"\r\n          value={photo}\r\n          onChange={handleNameChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nSearchBar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default SearchBar;\r\n","import PropTypes from 'prop-types';\r\nconst ImageGalleryItem = ({ name, photoUrl, largeImageURL, onClick }) => {\r\n  const handleOnClick = () => {\r\n    onClick(largeImageURL);\r\n  };\r\n\r\n  return (\r\n    <li className=\"ImageGalleryItem\" onClick={handleOnClick}>\r\n      <img src={photoUrl} alt={name} className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n  );\r\n};\r\nImageGalleryItem.propTypes = {\r\n  photoUrl: PropTypes.string,\r\n  name: PropTypes.number,\r\n  onClick: PropTypes.func,\r\n  largeImageURL: PropTypes.string,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem/imageGalleryItem';\r\n\r\nconst ImageGallery = ({ photos, onSelect }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {photos.map(photo => (\r\n        <ImageGalleryItem\r\n          key={photo.webformatURL}\r\n          name={photo.id}\r\n          photoUrl={photo.webformatURL}\r\n          largeImageURL={photo.largeImageURL}\r\n          onClick={() => onSelect(photo.largeImageURL)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nImageGallery.propTypes = {\r\n  photos: PropTypes.array,\r\n  onSelect: PropTypes.func,\r\n};\r\nexport default ImageGallery;\r\n","import PropTypes from 'prop-types';\r\nconst Button = ({ onClickLoadMore }) => {\r\n  window.scrollTo({\r\n    top: document.documentElement.scrollHeight,\r\n    behavior: 'smooth',\r\n  });\r\n\r\n  return (\r\n    <button type=\"button\" className=\"Button\" onClick={onClickLoadMore}>\r\n      <span>Load More</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","const BASE_URL = 'https://pixabay.com/api';\r\nconst KEY = '22670946-2b796d5e22242051989a80e4c';\r\n\r\nfunction fetchPhoto(name, page) {\r\n  return fetch(\r\n    `${BASE_URL}/?q=${name}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  ).then(response => {\r\n    return response.json();\r\n  });\r\n}\r\n\r\nconst api = {\r\n  fetchPhoto,\r\n};\r\n\r\nexport default api;\r\n","import LoaderSpinner from 'react-loader-spinner';\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"Overlay\">\r\n      <LoaderSpinner type=\"Puff\" color=\"#00BFFF\" height={100} width={100} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import { useEffect, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nconst Modal = ({ largeImageURL, onClose }) => {\r\n  const handleCloseModal = e => {\r\n    if (e.target === e.currentTarget) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleEscKey = useCallback(\r\n    e => {\r\n      if (e.code === 'Escape') {\r\n        onClose();\r\n      }\r\n    },\r\n    [onClose],\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleEscKey);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleEscKey);\r\n    };\r\n  }, [handleEscKey]);\r\n\r\n  return (\r\n    <div className=\"Overlay\" onClick={handleCloseModal}>\r\n      <div className=\"Modal\">\r\n        <img src={largeImageURL} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func,\r\n  largeImageURL: PropTypes.string,\r\n};\r\n\r\nexport default Modal;\r\n","import { useState, useEffect } from 'react';\nimport SearchBar from './components/Searchbar/searchbar';\nimport ImageGallery from './components/ImageGallery/imageGallery';\nimport Button from './components/Button/button';\nimport photoAPI from './photoApi';\nimport Loader from './components/Loader/Loader';\nimport Modal from './components/Modal/Modal';\n\nconst App = () => {\n  const [name, setName] = useState('');\n  const [photos, setPhotos] = useState([]);\n  const [page, setPage] = useState(1);\n  const [status, setStatus] = useState('idle');\n  const [showButton, setShowButton] = useState(false);\n  const [modalContent, setModalContent] = useState(null);\n\n  const handleFormSubmit = name => {\n    setName(name);\n    setPage(1);\n    setStatus('load');\n    setPhotos([]);\n  };\n\n  const handleSelectImage = largeImageUrl => {\n    setModalContent(largeImageUrl);\n  };\n\n  const handleCloseModal = () => {\n    setModalContent(null);\n  };\n\n  // componentDidUpdate() {\n  //   const nextName = this.state.name;\n  //   const nextPage = this.state.page;\n  //   if (this.state.status === 'load') {\n\n  //       this.setState({\n  //         photos: [...this.state.photos, ...photos.hits],\n  //         status: 'resolved',\n  //         showButton: true,\n  //       });\n  //     });\n  //   }\n  // }\n\n  const onButton = () => {\n    setPage(page + 1);\n    setStatus('load');\n  };\n\n  useEffect(() => {\n    if (status === 'load') {\n      photoAPI.fetchPhoto(name, page).then(imgs => {\n        if (imgs.hits.length === 0 && page === 1) {\n          setStatus('idle');\n          setShowButton(false);\n          return;\n        }\n        setPhotos(prevPhotos => [...prevPhotos, ...imgs.hits]);\n        setStatus('idle');\n        setShowButton(true);\n      });\n    }\n  }, [name, page, status]);\n\n  return (\n    <>\n      <SearchBar onSubmit={handleFormSubmit} />\n      <ImageGallery photos={photos} onSelect={handleSelectImage} />\n      {status === 'load' && <Loader />}\n      {showButton && <Button onClickLoadMore={onButton} />}\n      {modalContent && (\n        <Modal largeImageURL={modalContent} onClose={handleCloseModal} />\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}